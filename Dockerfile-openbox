#----------------------------------------------------------------------------------------------
# base system
#----------------------------------------------------------------------------------------------

FROM ubuntu:20.04 as system

# using USTC mirror in CN
RUN cp /etc/apt/sources.list /etc/apt/sources.list.nomirror
RUN sed -i 's#http://archive.ubuntu.com/ubuntu/#http://mirrors.ustc.edu.cn/ubuntu/#' /etc/apt/sources.list

# timezone
ENV TZ=Asia/Shanghai
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

# Avoid prompts for time zone
ENV DEBIAN_FRONTEND noninteractive
# Fix issue with libGL on Windows
ENV LIBGL_ALWAYS_INDIRECT 1

# install base packages
RUN apt-get update && \
    apt-get install -y apt-utils apt-transport-https && \
    apt-get install -y --no-install-recommends \
        software-properties-common \
        sudo passwd supervisor \
        curl wget tar zip unzip apache2-utils \
        nginx net-tools xz-utils \
        python3 python3-tk \
        gcc make cmake && \
    apt-get clean && \
    apt-get autoremove

# install x11 vnc
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        libpulse-dev libgl1-mesa-dri libglib2.0-de libnss3 libasound2 \
        alsa-utils mesa-utils \
        x11-xserver-utils xinit x11vnc dbus-x11 x11-utils xvfb \
        fonts-dejavu ttf-ubuntu-font-family ttf-wqy-zenhei \
        openbox && \
    apt-get clean && \
    apt-get autoremove

# install tini
# tini to fix subreap
ARG TINI_VERSION=v0.19.0
RUN wget https://github.com/krallin/tini/archive/v0.19.0.tar.gz && \
    tar zxf v0.19.0.tar.gz && \
    export CFLAGS="-DPR_SET_CHILD_SUBREAPER=36 -DPR_GET_CHILD_SUBREAPER=37"; \
    cd tini-0.19.0; cmake . && make && make install && \
    cd ..; rm -r tini-0.19.0 v0.19.0.tar.gz

# python library
# using Tsinghua mirror in CN
COPY rootfs/usr/local/lib/web/backend/requirements.txt /tmp/
RUN apt-get update && \
    dpkg-query -W -f='${Package}\n' > /tmp/a.txt && \
    apt-get install -y python3-pip python3-dev build-essential && \
    pip3 install setuptools wheel -i https://pypi.tuna.tsinghua.edu.cn/simple && \
    pip3 install -r /tmp/requirements.txt -i https://pypi.tuna.tsinghua.edu.cn/simple && \
    ln -s /usr/bin/python3 /usr/local/bin/python && \
    dpkg-query -W -f='${Package}\n' > /tmp/b.txt && \
    apt-get remove -y `diff --changed-group-format='%>' --unchanged-group-format='' /tmp/a.txt /tmp/b.txt | xargs` && \
    apt-get autoclean -y && \
    apt-get autoremove -y && \
    rm -rf /var/lib/apt/lists/* && \
    rm -rf /var/cache/apt/* /tmp/a.txt /tmp/b.txt /tmp/requirements.txt && \
    apt-get autoclean -y && \
    apt-get autoremove -y && \
    rm -rf /var/lib/apt/lists/* && \
    rm -rf /tmp/*

# lxde desktop
# RUN apt-get update && \
#     apt-get install -y --no-install-recommends --allow-unauthenticated \
#         lxde gtk2-engines-murrine gnome-themes-standard gtk2-engines-pixbuf gtk2-engines-murrine arc-theme

#----------------------------------------------------------------------------------------------
# builder
#----------------------------------------------------------------------------------------------

FROM ubuntu:20.04 as builder

# using USTC mirror in CN
RUN cp /etc/apt/sources.list /etc/apt/sources.list.nomirror
RUN sed -i 's#http://archive.ubuntu.com/ubuntu/#http://mirrors.ustc.edu.cn/ubuntu/#' /etc/apt/sources.list

RUN apt-get update && \
    apt-get install -y --no-install-recommends curl ca-certificates gnupg patch

# nodejs
RUN curl -sL https://deb.nodesource.com/setup_12.x | bash - \
    && apt-get install -y nodejs

# yarn
# Fix issue with libssl and docker on M1 chips
# RUN curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - \
COPY yarnpkg_pubkey.gpg .
RUN cat yarnpkg_pubkey.gpg | apt-key add -  && rm yarnpkg_pubkey.gpg && \
    echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list && \
    apt-get update && \
    apt-get install -y yarn

# build frontend
COPY web /src/web
RUN cd /src/web \
    && yarn upgrade \
    && yarn \
    && yarn build
RUN sed -i 's#app/locale/#novnc/app/locale/#' /src/web/dist/static/novnc/app/ui.js

RUN apt autoremove && apt autoclean

#----------------------------------------------------------------------------------------------
# merge
#----------------------------------------------------------------------------------------------
FROM system

LABEL maintainer="hui.liu02@united-imaging.com"

COPY --from=builder /src/web/dist/ /usr/local/lib/web/frontend/
COPY rootfs /
RUN ln -sf /usr/local/lib/web/frontend/static/websockify /usr/local/lib/web/frontend/static/novnc/utils/websockify && \
	chmod +x /usr/local/lib/web/frontend/static/websockify/run

EXPOSE 80
# WORKDIR /home/vspace
# ENV HOME=/home/vspace \
#     SHELL=/bin/bash
HEALTHCHECK --interval=30s --timeout=5s CMD curl --fail http://127.0.0.1:6079/api/health
ENTRYPOINT ["/startup.sh"]